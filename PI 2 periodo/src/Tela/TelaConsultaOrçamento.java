/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Tela;

import Tela.TelaPrincipal;
import classes.OS;
import classes.cliente;
import classes.estoque;
import classes.servicos;
import classes.veiculo;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import persistenciaCliente.ClienteDao;
import persistenciaEstoque.EstoqueDao;
import persistenciaOS.OsDao;
import persistenciaServicos.ServicosDao;
import persistenciaVeiculo.veiculoDao;

/**
 *
 * @author cabec
 */
public class TelaConsultaOrçamento extends javax.swing.JInternalFrame {

    /**
     * Creates new form TelaConsultaOrçamento
     */
    public TelaConsultaOrçamento() {
        initComponents();
        jButtonVoltar.setBounds(0, 0, 100, 30);
        jButtonVoltar.setOpaque(false);
        jButtonVoltar.setContentAreaFilled(false);
        jButtonVoltar.setBorderPainted(true);
        jButtonBuscar.setBounds(0, 0, 100, 30);
        jButtonBuscar.setOpaque(false);
        jButtonBuscar.setContentAreaFilled(false);
        jButtonBuscar.setBorderPainted(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jTelaConsultaOrçamento = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        jButtonBuscar = new javax.swing.JToggleButton();
        jScrollPane = new javax.swing.JScrollPane();
        JtableOrçamento = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jEscolherTipoBuscaOrçamento = new javax.swing.JComboBox<>();
        jCampoBuscaOrçamento = new javax.swing.JTextField();
        jCPF = new javax.swing.JFormattedTextField();
        jCNPJ = new javax.swing.JFormattedTextField();
        jButtonVoltar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setTitle("Consulta Orçamento");

        jTelaConsultaOrçamento.setBorder(new javax.swing.border.MatteBorder(null));
        jTelaConsultaOrçamento.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTelaConsultaOrçamento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTelaConsultaOrçamentoMouseClicked(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jButtonBuscar.setBackground(new java.awt.Color(51, 255, 0));
        jButtonBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8-search-32.png"))); // NOI18N
        jButtonBuscar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.ipadx = 4;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 4, 0, 0);
        jPanel1.add(jButtonBuscar, gridBagConstraints);

        JtableOrçamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID Orçamento", "Nome Cliente", "ID Serviço", "ID Veiculo", "ID Peças", "Qtd Peças", "Situação OS", "Valor Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JtableOrçamento.getTableHeader().setReorderingAllowed(false);
        JtableOrçamento.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                JtableOrçamentoAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        JtableOrçamento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JtableOrçamentoMouseClicked(evt);
            }
        });
        jScrollPane.setViewportView(JtableOrçamento);
        if (JtableOrçamento.getColumnModel().getColumnCount() > 0) {
            JtableOrçamento.getColumnModel().getColumn(0).setResizable(false);
            JtableOrçamento.getColumnModel().getColumn(1).setResizable(false);
            JtableOrçamento.getColumnModel().getColumn(2).setResizable(false);
            JtableOrçamento.getColumnModel().getColumn(3).setResizable(false);
            JtableOrçamento.getColumnModel().getColumn(4).setResizable(false);
            JtableOrçamento.getColumnModel().getColumn(5).setResizable(false);
            JtableOrçamento.getColumnModel().getColumn(6).setResizable(false);
            JtableOrçamento.getColumnModel().getColumn(7).setResizable(false);
        }

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 2013;
        gridBagConstraints.ipady = 468;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(18, 0, 0, 0);
        jPanel1.add(jScrollPane, gridBagConstraints);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Buscar por :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 0);
        jPanel1.add(jLabel1, gridBagConstraints);

        jEscolherTipoBuscaOrçamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID OS", "ID Cliente", "Situação" }));
        jEscolherTipoBuscaOrçamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEscolherTipoBuscaOrçamentoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 29;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 8, 0, 0);
        jPanel1.add(jEscolherTipoBuscaOrçamento, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 445;
        gridBagConstraints.ipady = 30;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 19, 0, 0);
        jPanel1.add(jCampoBuscaOrçamento, gridBagConstraints);

        try {
            jCPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jCPF.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 445;
        gridBagConstraints.ipady = 30;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 19, 0, 0);
        jPanel1.add(jCPF, gridBagConstraints);

        try {
            jCNPJ.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("  .   .   /    -  ")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.ipadx = 454;
        gridBagConstraints.ipady = 30;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 19, 0, 0);
        jPanel1.add(jCNPJ, gridBagConstraints);

        jButtonVoltar.setBackground(new java.awt.Color(102, 102, 102));
        jButtonVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icones/icons8-return-64 (1).png"))); // NOI18N
        jButtonVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVoltarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(14, 609, 0, 0);
        jPanel1.add(jButtonVoltar, gridBagConstraints);

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText(" Voltar");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 629, 4, 0);
        jPanel1.add(jLabel5, gridBagConstraints);

        jTelaConsultaOrçamento.setLayer(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jTelaConsultaOrçamentoLayout = new javax.swing.GroupLayout(jTelaConsultaOrçamento);
        jTelaConsultaOrçamento.setLayout(jTelaConsultaOrçamentoLayout);
        jTelaConsultaOrçamentoLayout.setHorizontalGroup(
            jTelaConsultaOrçamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jTelaConsultaOrçamentoLayout.setVerticalGroup(
            jTelaConsultaOrçamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTelaConsultaOrçamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTelaConsultaOrçamento)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        try {
            OsDao metodos = new OsDao();
            OS calular = new OS();
            ArrayList<OS> listaOS = null;
            listaOS = metodos.obterOS();
            DefaultTableModel model = (DefaultTableModel) JtableOrçamento.getModel();
            String[] vetString = new String[8];
            model.setRowCount(0);
            boolean contem = false;
            for (int i = 0; i < listaOS.size(); i++) {

                vetString[0] = listaOS.get(i).getCodigoDaOs() + "";
                vetString[1] = listaOS.get(i).getIdCliente() + "";
                vetString[2] = listaOS.get(i).getIdServico() + "";
                vetString[3] = listaOS.get(i).getIdVeiculo() + "";
                vetString[4] = listaOS.get(i).getIdPeca() + "";
                vetString[5] = listaOS.get(i).getQuantidadePecas() + "";
                vetString[6] = listaOS.get(i).getStatus() + "";
                vetString[7] = calular.valorTotal(FRAMEBITS, TOP_ALIGNMENT, TOP_ALIGNMENT) + "";
                if (jEscolherTipoBuscaOrçamento.getSelectedItem().equals("ID OS")) {
                    if (String.valueOf(listaOS.get(i).getCodigoDaOs()).equals(jCampoBuscaOrçamento.getText())) {
                        model.addRow(vetString);
                        contem = true;
                    }

                } else if (jEscolherTipoBuscaOrçamento.getSelectedItem().equals("ID Cliente")) {
                    if (String.valueOf(listaOS.get(i).getIdCliente()).equals(jCampoBuscaOrçamento.getText())) {
                        model.addRow(vetString);
                        contem = true;
                    }
                } else if (jEscolherTipoBuscaOrçamento.getSelectedItem().equals("Situação")) {
                    if (String.valueOf(listaOS.get(i).getStatus()).toUpperCase().equals(jCampoBuscaOrçamento.getText().toUpperCase())) {
                        model.addRow(vetString);
                        contem = true;
                    }

                }

            }
            if (contem == false) {
                throw new Exception("OS não encontrada!");

            }

        } catch (Exception erro) {
            JOptionPane.showMessageDialog(this, erro);
        }


    }//GEN-LAST:event_jButtonBuscarActionPerformed

    private void jEscolherTipoBuscaOrçamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEscolherTipoBuscaOrçamentoActionPerformed
        if (jEscolherTipoBuscaOrçamento.getSelectedItem().equals("CPF")) {
            jCPF.setVisible(true);
            jCPF.setEnabled(true);
            jCNPJ.setVisible(false);
            jCNPJ.setEnabled(false);
            jCampoBuscaOrçamento.setVisible(false);
        } else if (jEscolherTipoBuscaOrçamento.getSelectedItem().equals("CNPJ")) {
            jCNPJ.setVisible(true);
            jCNPJ.setEnabled(true);
            jCPF.setVisible(false);
            jCPF.setEnabled(false);
            jCampoBuscaOrçamento.setVisible(false);
        } else if (jEscolherTipoBuscaOrçamento.getSelectedItem().equals("ID")) {
            jCNPJ.setVisible(false);
            jCNPJ.setEnabled(false);
            jCPF.setVisible(false);
            jCPF.setEnabled(false);
            jCampoBuscaOrçamento.setVisible(true);
        }
    }//GEN-LAST:event_jEscolherTipoBuscaOrçamentoActionPerformed

    private void jButtonVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVoltarActionPerformed
        // TODO add your handling code here:
        TelaPrincipal.consultac = false;
        dispose();
    }//GEN-LAST:event_jButtonVoltarActionPerformed

    private void jTelaConsultaOrçamentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTelaConsultaOrçamentoMouseClicked

    }//GEN-LAST:event_jTelaConsultaOrçamentoMouseClicked

    private void JtableOrçamentoAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_JtableOrçamentoAncestorAdded
        int rows = 3;
        int cols = 3;
        JTable JtableOrçamento = new JTable(rows, cols);
        JtableOrçamento.setAutoResizeMode(JtableOrçamento.AUTO_RESIZE_OFF);
        int vColIndex = 0;
        TableColumn col = JtableOrçamento.getColumnModel().getColumn(vColIndex);
        int width = 100;
        col.setPreferredWidth(width);

        JtableOrçamento.getColumnModel().getColumn(0).setPreferredWidth(200);
        JtableOrçamento.getColumnModel().getColumn(1).setPreferredWidth(20);
        JtableOrçamento.getColumnModel().getColumn(2).setPreferredWidth(20);

    }//GEN-LAST:event_JtableOrçamentoAncestorAdded

    private void JtableOrçamentoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JtableOrçamentoMouseClicked
        try {
            TelaAtualizarOrçamento attorc = new TelaAtualizarOrçamento();
            jTelaConsultaOrçamento.add(attorc);
            attorc.setVisible(true);
            attorc.setPosicao();
            OsDao lista = new OsDao();
            OS calcular = new OS();
            ArrayList<OS> listaOS = null;
            listaOS = lista.obterOS();
// Estoque
            EstoqueDao metodosEstoque = new EstoqueDao();
            ArrayList<estoque> listaEstoque = null;
            listaEstoque = metodosEstoque.obterPecas();

// Serviços
            ServicosDao metodosServico = new ServicosDao();
            ArrayList<servicos> listaServico = null;
            listaServico = metodosServico.obterServicos();
// Cliente
            ClienteDao metodosCliente = new ClienteDao();
            ArrayList<cliente> listaCliente = null;
            listaCliente = metodosCliente.obterClientes();

// Veículo       
            veiculoDao metodosVeiculo = new veiculoDao();
            ArrayList<veiculo> listaVeiculo = null;
            listaVeiculo = metodosVeiculo.obterVeiculo();

            String usuario = "" + JtableOrçamento.getValueAt(JtableOrçamento.getSelectedRow(), 0);
            attorc.txtIDos.setText(usuario);
            for (int i = 0; i < listaOS.size(); i++) {
                if (String.valueOf(listaOS.get(i).getCodigoDaOs()).equals(usuario)) {
                    calcular.setQuantidadePecas(Integer.parseInt(listaOS.get(i).getQuantidadePecas() + ""));
                    calcular.setValorMaoDeobra(Float.parseFloat(listaOS.get(i).getValorMaoDeobra() + ""));
                    calcular.setValorUnitarioPecas(Float.parseFloat(listaOS.get(i).getValorUnitarioPecas() + ""));
                    attorc.jValorTotal.setText(calcular.valorTotal(FRAMEBITS, TOP_ALIGNMENT, TOP_ALIGNMENT) + "");
                    for (int J = 0; J < listaEstoque.size(); J++) {
                        if (String.valueOf(listaOS.get(i).getIdPeca()).equals(listaEstoque.get(J).getId() + "")) {
                            attorc.txtDescricaoPeca.setText("" + listaEstoque.get(J).getDescricao());
                            attorc.txtValorPeca.setText("" + listaEstoque.get(J).getValorUnidade());
                            attorc.txtQuantidade.setText("" + listaOS.get(i).getQuantidadePecas());
                            attorc.txtIDpeca.setText("" + listaEstoque.get(J).getId());

                        }
                    }
                    for (int K = 0; K < listaServico.size(); K++) {
                        if (String.valueOf(listaOS.get(i).getIdServico()).equals(listaServico.get(K).getCodigoDoServico() + "")) {
                            attorc.txtIDservico.setText("" + listaServico.get(K).getCodigoDoServico());
                            attorc.txtValorServico.setText("" + listaServico.get(K).getValor());
                            attorc.txtDescricaoServico.setText("" + listaServico.get(K).getDescricao());
                            attorc.txtTipoServico.setText("" + listaServico.get(K).getTipo());

                        }

                    }
                    for (int L = 0; L < listaCliente.size(); L++) {
                        if (String.valueOf(listaOS.get(i).getIdCliente()).equals(listaCliente.get(L).getID() + "")) {
                            attorc.txtIDcliente.setText("" + listaCliente.get(L).getID());
                            attorc.txtNomeCliente.setText("" + listaCliente.get(L).getNome());
                            if (String.valueOf(listaCliente.get(L).getTipoCliente()).equals("PESSOAFISICA")) {
                                attorc.jTipoPessoaOS.setSelectedItem(String.valueOf(listaCliente.get(L).getTipoCliente()));
                                attorc.txtCPFOS.setText("" + listaCliente.get(L).getCPF_CNPJ());

                            } else if (String.valueOf(listaCliente.get(L).getTipoCliente()).equals("PESSOAJURIDICA")) {
                                attorc.jTipoPessoaOS.setSelectedItem(String.valueOf(listaCliente.get(L).getTipoCliente()));
                                attorc.txtCNPJOS.setText("" + listaCliente.get(L).getCPF_CNPJ());

                            }
                        }

                    }
                    for (int M = 0; M < listaVeiculo.size(); M++) {
                        if (String.valueOf(listaOS.get(i).getIdCliente()).equals(listaCliente.get(M).getID() + "")) {
                            attorc.txtIDVeiculo.setText("" + listaVeiculo.get(M).getID());
                            attorc.txtPLACA.setText("" + listaVeiculo.get(M).getPlaca());
                            attorc.txtModeloVeiculo.setText("" + listaVeiculo.get(M).getModeloVeiculo().getDescricao());
                        }

                    }

                }
            }
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(this, erro);
            erro.printStackTrace();
        }


    }//GEN-LAST:event_JtableOrçamentoMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTable JtableOrçamento;
    public javax.swing.JToggleButton jButtonBuscar;
    public javax.swing.JButton jButtonVoltar;
    public javax.swing.JFormattedTextField jCNPJ;
    public javax.swing.JFormattedTextField jCPF;
    public javax.swing.JTextField jCampoBuscaOrçamento;
    public javax.swing.JComboBox<String> jEscolherTipoBuscaOrçamento;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel5;
    public javax.swing.JPanel jPanel1;
    public javax.swing.JScrollPane jScrollPane;
    public javax.swing.JDesktopPane jTelaConsultaOrçamento;
    // End of variables declaration//GEN-END:variables
}
