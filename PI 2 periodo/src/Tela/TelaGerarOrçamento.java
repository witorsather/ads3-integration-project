/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Tela;

import classes.OS;
import classes.cliente;
import classes.colaborador;
import classes.estoque;
import classes.servicos;
import classes.veiculo;
import enumeradores.statusOS;
import enumeradores.tipoServicos;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.plaf.metal.MetalButtonUI;
import javax.swing.table.DefaultTableModel;
import persistenciaCliente.ClienteDao;
import persistenciaColaborador.ColaboradorDao;
import persistenciaEstoque.EstoqueDao;
import persistenciaOS.OsDao;
import persistenciaServicos.ServicosDao;
import persistenciaVeiculo.veiculoDao;

/**
 *
 * @author ALUNO
 */
public class TelaGerarOrçamento extends javax.swing.JInternalFrame {

    public void setPosicao() {
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
    }

    /**
     * Creates new form TelaGerarOrçamento
     */
    public TelaGerarOrçamento() {
        initComponents();
        txtIDcliente.setEditable(false);
        txtNomeCliente.setEditable(false);
        txtCPFOS.setEditable(false);
        txtCNPJOS.setEditable(false);
        txtIDpeca.setEditable(false);
        txtIDVeiculo.setEditable(false);
        txtDescricaoPeca.setEditable(false);
        txtValorPeca.setEditable(false);
        txtValorServico.setEditable(false);
        txtvalorTotal.setEditable(false);
        txtPLACA.setEditable(false);
        txtTipoServico.setEditable(false);
        txtValorServico.setEditable(false);
        txtModelo.setEditable(false);
        txtTipoServico.setEditable(false);
        txtIDservico.setEditable(false);
        txtOS.setEditable(false);

        try {
            ColaboradorDao metodos = new ColaboradorDao();
            ArrayList<colaborador> listaColaborador = null;
            listaColaborador = metodos.obterColaborador();

            DefaultComboBoxModel modelColaborador = (DefaultComboBoxModel) jComboBoxFuncionario.getModel();
            String[] vetString = new String[listaColaborador.size()];
            for (int i = 0; i < listaColaborador.size(); i++) {

                vetString[i] = listaColaborador.get(i).getNome();

            }
            jComboBoxFuncionario.setModel(new DefaultComboBoxModel(vetString));

        } catch (Exception erro) {
            JOptionPane.showMessageDialog(this, erro);
        }
        //
        txtvalorTotal.setEditable(false);
        jEscolherTipoBuscaCliente.setVisible(false);
        txtBuscarClienteO.setVisible(false);
        jBuscarPor.setVisible(false);
        jButtonBuscarO.setVisible(false);
        txtCPFO.setVisible(false);
        txtCNPJO.setVisible(false);
        //peca///////////////////////////////////
        jEscolherTipoBuscaPeca.setVisible(false);
        jButtonBuscarPeca.setVisible(false);
        txtBuscarPecasO.setVisible(false);
        //servico/////////////////////////////
        txtBuscarServico.setVisible(false);
        jButtonBuscarServico.setVisible(false);
        jEscolherTipoBuscaServico.setVisible(false);
        //veiculo/////////////////////////////

        jEscolherTipoBuscaVeiculo.setVisible(false);
        txtBuscarVeiculo.setVisible(false);
        txtBuscarVeiculo.setEnabled(false);
        txtPlaca.setVisible(false);
        txtPlaca.setEnabled(false);

        jButtonBuscarVeiculo.setVisible(false);
        //campos CNPJOS-CPFOS//
        txtCPFOS.setVisible(false);
        txtCPFOS.setVisible(false);
        txtCNPJOS.setVisible(false);
        jCNPJOS.setVisible(false);
        jCPFOS.setVisible(false);
        //
        //Botoes//
        jButtonCriarOrçamento.setBounds(0, 0, 100, 30);
        jButtonCriarOrçamento.setOpaque(false);
        jButtonCriarOrçamento.setContentAreaFilled(false);
        jButtonCriarOrçamento.setBorderPainted(true);
        jButtonVoltarO.setBounds(0, 0, 100, 30);
        jButtonVoltarO.setOpaque(false);
        jButtonVoltarO.setContentAreaFilled(false);
        jButtonVoltarO.setBorderPainted(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel5 = new javax.swing.JPanel();
        jOrçamento = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        jCEscolherLista = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCliente = new javax.swing.JTable();
        txtBuscarClienteO = new javax.swing.JTextField();
        jButtonBuscarO = new javax.swing.JToggleButton();
        txtBuscarPecasO = new javax.swing.JTextField();
        jBuscarPor = new javax.swing.JLabel();
        jEscolherTipoBuscaCliente = new javax.swing.JComboBox<>();
        txtCPFO = new javax.swing.JFormattedTextField();
        txtCNPJO = new javax.swing.JFormattedTextField();
        jEscolherTipoBuscaPeca = new javax.swing.JComboBox<>();
        jButtonBuscarPeca = new javax.swing.JToggleButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNomeCliente = new javax.swing.JTextField();
        txtIDcliente = new javax.swing.JTextField();
        jTipoPessoaOS = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jCNPJOS = new javax.swing.JLabel();
        jCPFOS = new javax.swing.JLabel();
        txtCPFOS = new javax.swing.JFormattedTextField();
        txtCNPJOS = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        txtIDVeiculo = new javax.swing.JTextField();
        txtModelo = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtPLACA = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtValorServico = new javax.swing.JTextField();
        txtIDservico = new javax.swing.JTextField();
        txtTipoServico = new javax.swing.JTextField();
        txtDescricaoServico = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtIDpeca = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtDescricaoPeca = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtQuantidadePecas = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtValorPeca = new javax.swing.JTextField();
        txtBuscarServico = new javax.swing.JTextField();
        jButtonBuscarServico = new javax.swing.JToggleButton();
        jEscolherTipoBuscaServico = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtOS = new javax.swing.JTextField();
        jButtonCriarOrçamento = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jButtonVoltarO = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jComboBoxFuncionario = new javax.swing.JComboBox<>();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtProblemaRelatado = new javax.swing.JTextArea();
        jPanel7 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtvalorTotal = new javax.swing.JTextArea();
        txtBuscarVeiculo = new javax.swing.JTextField();
        txtPlaca = new javax.swing.JFormattedTextField();
        jButtonBuscarVeiculo = new javax.swing.JToggleButton();
        jEscolherTipoBuscaVeiculo = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setTitle("Gerar Orçamento");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jCEscolherLista.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "Cliente", "Peça", "Serviço", "Veiculo" }));
        jCEscolherLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCEscolherListaActionPerformed(evt);
            }
        });
        jPanel1.add(jCEscolherLista, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 540, -1, -1));

        jTableCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "ID", "CPF/CNPJ", "Modelo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Integer.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTableCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableClienteMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableCliente);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 540, 910, 146));
        jPanel1.add(txtBuscarClienteO, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 610, 150, -1));

        jButtonBuscarO.setBackground(new java.awt.Color(153, 153, 153));
        jButtonBuscarO.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icones/icons8-magnifying-glass-16 (1).png"))); // NOI18N
        jButtonBuscarO.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButtonBuscarO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarOActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonBuscarO, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 610, 30, 22));
        jPanel1.add(txtBuscarPecasO, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 610, 150, -1));

        jBuscarPor.setBackground(new java.awt.Color(255, 255, 255));
        jBuscarPor.setForeground(new java.awt.Color(255, 255, 255));
        jBuscarPor.setText("Buscar Por");
        jPanel1.add(jBuscarPor, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 580, -1, -1));

        jEscolherTipoBuscaCliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "Nome", "CPF", "CNPJ" }));
        jEscolherTipoBuscaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEscolherTipoBuscaClienteActionPerformed(evt);
            }
        });
        jPanel1.add(jEscolherTipoBuscaCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 580, -1, -1));

        try {
            txtCPFO.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel1.add(txtCPFO, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 610, 150, -1));

        try {
            txtCNPJO.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###.###/####-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel1.add(txtCNPJO, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 610, 150, -1));

        jEscolherTipoBuscaPeca.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "ID", "Descrição" }));
        jEscolherTipoBuscaPeca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEscolherTipoBuscaPecaActionPerformed(evt);
            }
        });
        jPanel1.add(jEscolherTipoBuscaPeca, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 580, -1, -1));

        jButtonBuscarPeca.setBackground(new java.awt.Color(153, 153, 153));
        jButtonBuscarPeca.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icones/icons8-magnifying-glass-16 (1).png"))); // NOI18N
        jButtonBuscarPeca.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButtonBuscarPeca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarPecaActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonBuscarPeca, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 610, 30, 22));

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)), "Cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nome");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, -1, -1));

        jLabel2.setForeground(new java.awt.Color(0, 0, 255));
        jLabel2.setText("ID");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 18, -1, -1));
        jPanel2.add(txtNomeCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, 140, -1));
        jPanel2.add(txtIDcliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 40, 40, -1));

        jTipoPessoaOS.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione..", "Pessoa Física", "Pessoa Jurídica" }));
        jTipoPessoaOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTipoPessoaOSActionPerformed(evt);
            }
        });
        jPanel2.add(jTipoPessoaOS, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 40, -1, -1));

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Tipo De Pessoa");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 20, -1, -1));

        jCNPJOS.setForeground(new java.awt.Color(255, 255, 255));
        jCNPJOS.setText("CNPJ");
        jPanel2.add(jCNPJOS, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 20, -1, -1));

        jCPFOS.setForeground(new java.awt.Color(242, 242, 242));
        jCPFOS.setText("CPF");
        jPanel2.add(jCPFOS, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 20, -1, -1));

        try {
            txtCPFOS.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel2.add(txtCPFOS, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 40, 120, -1));

        try {
            txtCNPJOS.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###.###/####-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel2.add(txtCNPJOS, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 40, 120, -1));

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Modelo");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 20, -1, -1));
        jPanel2.add(txtIDVeiculo, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 40, 80, -1));
        jPanel2.add(txtModelo, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 40, 120, -1));

        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Placa");
        jPanel2.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 20, -1, -1));
        jPanel2.add(txtPLACA, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 40, 120, -1));

        jLabel21.setForeground(new java.awt.Color(0, 0, 255));
        jLabel21.setText("ID Veículo");
        jPanel2.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 20, -1, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, 1140, 90));

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)), "Serviço\n", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setBackground(new java.awt.Color(0, 0, 255));
        jLabel11.setForeground(new java.awt.Color(0, 0, 255));
        jLabel11.setText("ID");
        jPanel3.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 24, -1, -1));

        jLabel12.setForeground(new java.awt.Color(242, 242, 242));
        jLabel12.setText("Tipo Serviço");
        jPanel3.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 20, -1, -1));

        jLabel13.setForeground(new java.awt.Color(242, 242, 242));
        jLabel13.setText("Descrição");
        jPanel3.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 98, -1, -1));

        jLabel14.setForeground(new java.awt.Color(242, 242, 242));
        jLabel14.setText("Valor");
        jPanel3.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(178, 98, -1, -1));
        jPanel3.add(txtValorServico, new org.netbeans.lib.awtextra.AbsoluteConstraints(178, 120, 80, -1));
        jPanel3.add(txtIDservico, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 46, 40, -1));
        jPanel3.add(txtTipoServico, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 40, 130, 30));
        jPanel3.add(txtDescricaoServico, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 120, 130, -1));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 290, 320, 180));

        jPanel4.setBackground(new java.awt.Color(0, 0, 0));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)), "Peça", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setBackground(new java.awt.Color(0, 0, 255));
        jLabel7.setForeground(new java.awt.Color(0, 0, 255));
        jLabel7.setText("ID");
        jPanel4.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 24, -1, -1));
        jPanel4.add(txtIDpeca, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 46, 40, -1));

        jLabel8.setForeground(new java.awt.Color(242, 242, 242));
        jLabel8.setText("Descrição");
        jPanel4.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 95, -1, -1));
        jPanel4.add(txtDescricaoPeca, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 117, 130, -1));

        jLabel9.setForeground(new java.awt.Color(242, 242, 242));
        jLabel9.setText("Qnt.");
        jPanel4.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(188, 24, -1, -1));
        jPanel4.add(txtQuantidadePecas, new org.netbeans.lib.awtextra.AbsoluteConstraints(188, 46, 80, -1));

        jLabel10.setForeground(new java.awt.Color(242, 242, 242));
        jLabel10.setText("Valor/U");
        jPanel4.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(188, 95, -1, -1));
        jPanel4.add(txtValorPeca, new org.netbeans.lib.awtextra.AbsoluteConstraints(188, 117, 80, -1));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 340, 180));
        jPanel1.add(txtBuscarServico, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 610, 150, -1));

        jButtonBuscarServico.setBackground(new java.awt.Color(153, 153, 153));
        jButtonBuscarServico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icones/icons8-magnifying-glass-16 (1).png"))); // NOI18N
        jButtonBuscarServico.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButtonBuscarServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarServicoActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonBuscarServico, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 610, 30, 22));

        jEscolherTipoBuscaServico.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "ID", "Tipo Serviço", "Descrição" }));
        jEscolherTipoBuscaServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEscolherTipoBuscaServicoActionPerformed(evt);
            }
        });
        jPanel1.add(jEscolherTipoBuscaServico, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 580, -1, -1));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 255));
        jLabel3.setText("Código Da OS");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, -1));
        jPanel1.add(txtOS, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 60, 60, -1));

        jButtonCriarOrçamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icones/icons8-create-64.png"))); // NOI18N
        jButtonCriarOrçamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCriarOrçamentoActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonCriarOrçamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 80, -1, -1));

        jLabel15.setForeground(new java.awt.Color(242, 242, 242));
        jLabel15.setText("Criar Orçamento");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 150, -1, -1));

        jButtonVoltarO.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icones/icons8-return-64 (1).png"))); // NOI18N
        jButtonVoltarO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVoltarOActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonVoltarO, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 80, -1, 70));

        jLabel16.setForeground(new java.awt.Color(242, 242, 242));
        jLabel16.setText("Retornar");
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 150, -1, -1));

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/orcamentacao.png"))); // NOI18N
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 30, -1, -1));

        jLabel17.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 0, 255));
        jLabel17.setText("Funcionario Responsavel");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, -1, -1));

        jComboBoxFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxFuncionarioActionPerformed(evt);
            }
        });
        jPanel1.add(jComboBoxFuncionario, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 140, 160, -1));

        jPanel6.setBackground(new java.awt.Color(0, 0, 0));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)), "Problema Relatado", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N

        txtProblemaRelatado.setColumns(20);
        txtProblemaRelatado.setRows(5);
        jScrollPane2.setViewportView(txtProblemaRelatado);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 438, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 290, 460, 180));

        jPanel7.setBackground(new java.awt.Color(0, 0, 0));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        jButton1.setText("CALCULAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtvalorTotal.setColumns(20);
        txtvalorTotal.setRows(5);
        jScrollPane3.setViewportView(txtvalorTotal);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jPanel1.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 500, 200, 30));
        jPanel1.add(txtBuscarVeiculo, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 610, 150, -1));

        try {
            txtPlaca.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("UUU-AAAA")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel1.add(txtPlaca, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 610, 150, -1));

        jButtonBuscarVeiculo.setBackground(new java.awt.Color(153, 153, 153));
        jButtonBuscarVeiculo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icones/icons8-magnifying-glass-16 (1).png"))); // NOI18N
        jButtonBuscarVeiculo.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButtonBuscarVeiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarVeiculoActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonBuscarVeiculo, new org.netbeans.lib.awtextra.AbsoluteConstraints(1130, 610, 30, 22));

        jEscolherTipoBuscaVeiculo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione...", "ID Cliente", "Placa" }));
        jEscolherTipoBuscaVeiculo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEscolherTipoBuscaVeiculoActionPerformed(evt);
            }
        });
        jPanel1.add(jEscolherTipoBuscaVeiculo, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 580, -1, -1));

        jLabel20.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Valor Total :");
        jPanel1.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 470, -1, -1));

        jOrçamento.setLayer(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jOrçamentoLayout = new javax.swing.GroupLayout(jOrçamento);
        jOrçamento.setLayout(jOrçamentoLayout);
        jOrçamentoLayout.setHorizontalGroup(
            jOrçamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1182, Short.MAX_VALUE)
        );
        jOrçamentoLayout.setVerticalGroup(
            jOrçamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 715, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jOrçamento))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jOrçamento)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jCEscolherListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCEscolherListaActionPerformed
        if (jCEscolherLista.getSelectedItem().equals("Selecione...")) {
            jEscolherTipoBuscaCliente.setVisible(false);
            jEscolherTipoBuscaCliente.setEnabled(false);
            jEscolherTipoBuscaPeca.setEnabled(false);
            jEscolherTipoBuscaPeca.setVisible(false);
            jEscolherTipoBuscaServico.setEnabled(false);
            jEscolherTipoBuscaServico.setVisible(false);
            jEscolherTipoBuscaVeiculo.setEnabled(false);
            jEscolherTipoBuscaVeiculo.setVisible(false);
            jBuscarPor.setVisible(false);
            jButtonBuscarO.setVisible(false);

            //cliente
            txtCNPJO.setVisible(false);
            txtCNPJO.setEnabled(false);

            txtCPFO.setEnabled(false);
            txtCPFO.setVisible(false);

            txtBuscarPecasO.setVisible(false);
            txtBuscarPecasO.setEnabled(false);

            txtBuscarClienteO.setVisible(false);
            txtBuscarClienteO.setEnabled(false);
            //peça
            txtBuscarPecasO.setVisible(false);
            txtBuscarPecasO.setEnabled(false);

            jButtonBuscarPeca.setVisible(false);
            //servico/////////////////////////////
            txtBuscarServico.setVisible(false);
            txtBuscarServico.setEnabled(false);

            jButtonBuscarServico.setVisible(false);
            //veiculo
            txtBuscarVeiculo.setVisible(false);
            txtBuscarVeiculo.setEnabled(false);
            txtPlaca.setVisible(false);
            txtPlaca.setEnabled(false);

            jButtonBuscarVeiculo.setVisible(false);
        }
        if (jCEscolherLista.getSelectedItem().equals("Cliente")) {
            jTableCliente.setModel(new DefaultTableModel(new Object[]{"ID", "Nome", "Telefone", "CPF/CNPJ"}, 0));
            //combo box
            jEscolherTipoBuscaCliente.setVisible(true);
            jEscolherTipoBuscaCliente.setEnabled(true);
            jBuscarPor.setVisible(true);
            jEscolherTipoBuscaCliente.setSelectedIndex(0);
            //cliente////////////////////////////////
            txtCNPJO.setVisible(false);
            txtCNPJO.setEnabled(false);

            txtCPFO.setEnabled(false);
            txtCPFO.setVisible(false);

            txtBuscarPecasO.setVisible(false);
            txtBuscarPecasO.setEnabled(false);

            txtBuscarClienteO.setVisible(false);
            txtBuscarClienteO.setEnabled(false);

            jButtonBuscarO.setVisible(false);
            //peça/////////////////////////////////
            txtBuscarPecasO.setVisible(false);
            txtBuscarPecasO.setEnabled(false);

            jButtonBuscarPeca.setVisible(false);

            jEscolherTipoBuscaPeca.setVisible(false);
            jEscolherTipoBuscaPeca.setEnabled(false);
            //servico/////////////////////////////
            txtBuscarServico.setVisible(false);
            txtBuscarServico.setEnabled(false);

            jButtonBuscarServico.setVisible(false);

            jEscolherTipoBuscaServico.setVisible(false);
            jEscolherTipoBuscaServico.setEnabled(false);
            //veiculo
            txtBuscarVeiculo.setVisible(false);
            txtBuscarVeiculo.setEnabled(false);
            txtPlaca.setVisible(false);
            txtPlaca.setEnabled(false);

            jButtonBuscarVeiculo.setVisible(false);

        }
        if (jCEscolherLista.getSelectedItem().equals("Peça")) {
            jTableCliente.setModel(new DefaultTableModel(new Object[]{"ID", "Descrição", "Valor/U", "Qnt.Estoque"}, 0));
            jEscolherTipoBuscaCliente.setVisible(false);
            jEscolherTipoBuscaCliente.setEnabled(false);
            jButtonBuscarO.setVisible(false);
            jEscolherTipoBuscaPeca.setSelectedIndex(0);
            //cliente////////////////////////////////
            txtCNPJO.setVisible(false);
            txtCNPJO.setEnabled(false);

            txtCPFO.setEnabled(false);
            txtCPFO.setVisible(false);

            txtBuscarPecasO.setVisible(false);
            txtBuscarPecasO.setEnabled(false);

            txtBuscarClienteO.setVisible(false);
            txtBuscarClienteO.setEnabled(false);

            jEscolherTipoBuscaCliente.setVisible(false);
            jEscolherTipoBuscaCliente.setEnabled(false);
            //peça/////////////////////////////////
            txtBuscarPecasO.setVisible(false);
            txtBuscarPecasO.setEnabled(false);

            jButtonBuscarPeca.setVisible(false);
            //servico/////////////////////////////
            txtBuscarServico.setVisible(false);
            txtBuscarServico.setEnabled(false);

            jButtonBuscarServico.setVisible(false);

            jEscolherTipoBuscaServico.setVisible(false);
            jEscolherTipoBuscaServico.setEnabled(false);
            //combo box
            jEscolherTipoBuscaPeca.setVisible(true);
            jEscolherTipoBuscaPeca.setEnabled(true);
            //label
            jBuscarPor.setVisible(true);

            //veiculo
            txtBuscarVeiculo.setVisible(false);
            txtBuscarVeiculo.setEnabled(false);
            txtPlaca.setVisible(false);
            txtPlaca.setEnabled(false);

            jButtonBuscarVeiculo.setVisible(false);
        }
        if (jCEscolherLista.getSelectedItem().equals("Serviço")) {
            jTableCliente.setModel(new DefaultTableModel(new Object[]{"ID", "Tipo De Serviço", "Descrição", "Valor"}, 0));
            jEscolherTipoBuscaServico.setVisible(true);
            jEscolherTipoBuscaServico.setEnabled(true);
            jBuscarPor.setVisible(true);
            jEscolherTipoBuscaServico.setSelectedIndex(0);
            //cliente
            txtCNPJO.setVisible(false);
            txtCNPJO.setEnabled(false);

            txtCPFO.setEnabled(false);
            txtCPFO.setVisible(false);

            txtBuscarPecasO.setVisible(false);
            txtBuscarPecasO.setEnabled(false);

            txtBuscarClienteO.setVisible(false);
            txtBuscarClienteO.setEnabled(false);

            jEscolherTipoBuscaCliente.setVisible(false);
            jEscolherTipoBuscaCliente.setEnabled(false);
            //peça
            txtBuscarPecasO.setVisible(false);
            txtBuscarPecasO.setEnabled(false);

            jButtonBuscarPeca.setVisible(false);

            jEscolherTipoBuscaPeca.setVisible(false);
            jEscolherTipoBuscaPeca.setEnabled(false);

            //servico/////////////////////////////
            txtBuscarServico.setVisible(false);
            txtBuscarServico.setEnabled(false);

            jButtonBuscarServico.setVisible(false);
            //veiculo
            txtBuscarVeiculo.setVisible(false);
            txtBuscarVeiculo.setEnabled(false);
            txtPlaca.setVisible(false);
            txtPlaca.setEnabled(false);

            jButtonBuscarVeiculo.setVisible(false);
        }
        if (jCEscolherLista.getSelectedItem().equals("Veiculo")) {
            jTableCliente.setModel(new DefaultTableModel(new Object[]{"ID", "ID Cliente", "Placa", "Modelo"}, 0));
            jEscolherTipoBuscaVeiculo.setVisible(true);
            jEscolherTipoBuscaVeiculo.setEnabled(true);
            jBuscarPor.setVisible(true);
            jEscolherTipoBuscaVeiculo.setSelectedIndex(0);
            //cliente
            txtCNPJO.setVisible(false);
            txtCNPJO.setEnabled(false);

            txtCPFO.setEnabled(false);
            txtCPFO.setVisible(false);

            txtBuscarPecasO.setVisible(false);
            txtBuscarPecasO.setEnabled(false);

            txtBuscarClienteO.setVisible(false);
            txtBuscarClienteO.setEnabled(false);

            jEscolherTipoBuscaCliente.setVisible(false);
            jEscolherTipoBuscaCliente.setEnabled(false);
            //peça
            txtBuscarPecasO.setVisible(false);
            txtBuscarPecasO.setEnabled(false);

            jButtonBuscarPeca.setVisible(false);

            jEscolherTipoBuscaPeca.setVisible(false);
            jEscolherTipoBuscaPeca.setEnabled(false);

            //servico/////////////////////////////
            txtBuscarServico.setVisible(false);
            txtBuscarServico.setEnabled(false);

            jButtonBuscarServico.setVisible(false);
            //veiculo
            txtBuscarVeiculo.setVisible(false);
            txtBuscarVeiculo.setEnabled(false);
            txtPlaca.setVisible(false);
            txtPlaca.setEnabled(false);

            jButtonBuscarVeiculo.setVisible(false);
        }
    }//GEN-LAST:event_jCEscolherListaActionPerformed

    private void jButtonBuscarOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarOActionPerformed
        try {
            if (jCEscolherLista.getSelectedItem().equals("Cliente")) {
                ClienteDao lista = new ClienteDao();
                DefaultTableModel modelCliente = (DefaultTableModel) jTableCliente.getModel();
                ArrayList<cliente> listaCliente = null;
                listaCliente = lista.obterClientes();
                String[] vetString = new String[4];
                modelCliente.setRowCount(0);
                boolean contem = false;
                for (int i = 0; i < listaCliente.size(); i++) {

                    vetString[1] = listaCliente.get(i).getNome() + "";
                    vetString[0] = listaCliente.get(i).getID() + "";
                    vetString[3] = listaCliente.get(i).getCPF_CNPJ() + "";
                    vetString[2] = listaCliente.get(i).getTelefone().getTelefone() + "";

                    if (jEscolherTipoBuscaCliente.getSelectedItem().equals("Nome")) {
                        if (listaCliente.get(i).getNome().toUpperCase().contains(txtBuscarClienteO.getText().toUpperCase())) {
                            modelCliente.addRow(vetString);
                            contem = true;
                        }
                    } else if (jEscolherTipoBuscaCliente.getSelectedItem().equals("CPF")) {
                        if (listaCliente.get(i).getCPF_CNPJ().contains(txtCPFO.getText())) {
                            modelCliente.addRow(vetString);
                            contem = true;
                        }
                    } else if (jEscolherTipoBuscaCliente.getSelectedItem().equals("CNPJ")) {
                        if (listaCliente.get(i).getCPF_CNPJ().contains(txtCNPJO.getText())) {
                            modelCliente.addRow(vetString);
                            contem = true;
                        }

                    }

                }
                if (contem == false) {
                    throw new Exception("Cliente não encontrado");
                }
            }
//"ID", "Tipo De Serviço", "Descrição", "Valor"
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(this, erro);
            erro.printStackTrace();
        }


    }//GEN-LAST:event_jButtonBuscarOActionPerformed

    private void jEscolherTipoBuscaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEscolherTipoBuscaClienteActionPerformed
        if (jEscolherTipoBuscaCliente.getSelectedItem().equals("Selecione...")) {
            txtCNPJO.setVisible(false);
            txtCNPJO.setEnabled(false);

            txtCPFO.setEnabled(false);
            txtCPFO.setVisible(false);

            txtBuscarPecasO.setVisible(false);
            txtBuscarPecasO.setEnabled(false);

            txtBuscarClienteO.setVisible(false);
            txtBuscarClienteO.setEnabled(false);

            jButtonBuscarO.setVisible(false);
            jEscolherTipoBuscaPeca.setVisible(false);
            jButtonBuscarPeca.setVisible(false);
        }
        if (jEscolherTipoBuscaCliente.getSelectedItem().equals("CNPJ")) {
            txtCNPJO.setVisible(true);
            txtCNPJO.setEnabled(true);

            txtCPFO.setEnabled(false);
            txtCPFO.setVisible(false);

            txtBuscarPecasO.setVisible(false);
            txtBuscarPecasO.setEnabled(false);

            txtBuscarClienteO.setVisible(false);
            txtBuscarClienteO.setEnabled(false);

            jButtonBuscarO.setVisible(true);
            jEscolherTipoBuscaPeca.setVisible(false);
        }
        if (jEscolherTipoBuscaCliente.getSelectedItem().equals("CPF")) {

            txtCNPJO.setVisible(false);
            txtCNPJO.setEnabled(false);

            txtCPFO.setEnabled(true);
            txtCPFO.setVisible(true);

            txtBuscarPecasO.setVisible(false);
            txtBuscarPecasO.setEnabled(false);

            txtBuscarClienteO.setVisible(false);
            txtBuscarClienteO.setEnabled(false);

            jButtonBuscarO.setVisible(true);
            jEscolherTipoBuscaPeca.setVisible(false);
        }
        if (jEscolherTipoBuscaCliente.getSelectedItem().equals("Nome")) {

            txtCNPJO.setVisible(false);
            txtCNPJO.setEnabled(false);

            txtCPFO.setEnabled(false);
            txtCPFO.setVisible(false);

            txtBuscarPecasO.setVisible(false);
            txtBuscarPecasO.setEnabled(false);

            txtBuscarClienteO.setVisible(true);
            txtBuscarClienteO.setEnabled(true);

            jButtonBuscarO.setVisible(true);
            jEscolherTipoBuscaPeca.setVisible(false);
    }//GEN-LAST:event_jEscolherTipoBuscaClienteActionPerformed
    }
    private void jEscolherTipoBuscaPecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEscolherTipoBuscaPecaActionPerformed
        if (jEscolherTipoBuscaPeca.getSelectedItem().equals("Selecione...")) {
            txtBuscarPecasO.setVisible(false);
            txtBuscarPecasO.setEnabled(false);

            jButtonBuscarPeca.setVisible(false);
        }
        if (jEscolherTipoBuscaPeca.getSelectedItem().equals("ID")) {
            txtBuscarPecasO.setVisible(true);
            txtBuscarPecasO.setEnabled(true);
            jButtonBuscarPeca.setVisible(true);
        }
        if (jEscolherTipoBuscaPeca.getSelectedItem().equals("Descrição")) {
            txtBuscarPecasO.setVisible(true);
            txtBuscarPecasO.setEnabled(true);
            jButtonBuscarPeca.setVisible(true);

        }
    }//GEN-LAST:event_jEscolherTipoBuscaPecaActionPerformed

    private void jEscolherTipoBuscaServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEscolherTipoBuscaServicoActionPerformed
        if (jEscolherTipoBuscaServico.getSelectedItem().equals("Selecione...")) {
            txtBuscarServico.setVisible(false);
            txtBuscarServico.setEnabled(false);

            jButtonBuscarServico.setVisible(false);
        }
        if (jEscolherTipoBuscaServico.getSelectedItem().equals("ID")) {
            txtBuscarServico.setVisible(true);
            txtBuscarServico.setEnabled(true);

            jButtonBuscarServico.setVisible(true);
        }
        if (jEscolherTipoBuscaServico.getSelectedItem().equals("Tipo Serviço")) {
            txtBuscarServico.setVisible(true);
            txtBuscarServico.setEnabled(true);

            jButtonBuscarServico.setVisible(true);
        }
        if (jEscolherTipoBuscaServico.getSelectedItem().equals("Descrição")) {
            txtBuscarServico.setVisible(true);
            txtBuscarServico.setEnabled(true);

            jButtonBuscarServico.setVisible(true);
        }
    }//GEN-LAST:event_jEscolherTipoBuscaServicoActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        jEscolherTipoBuscaCliente.setSelectedIndex(0);
        jEscolherTipoBuscaPeca.setSelectedIndex(0);
        jEscolherTipoBuscaServico.setSelectedIndex(0);
        Date datasistema = new Date();
        //jData.setDate(datasistema);
    }//GEN-LAST:event_formInternalFrameOpened

    private void jTipoPessoaOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTipoPessoaOSActionPerformed
        if (jTipoPessoaOS.getSelectedItem().equals("Pessoa Física")) {

            txtCPFOS.setEnabled(true);
            txtCPFOS.setVisible(true);
            jCPFOS.setVisible(true);
            txtCNPJOS.setVisible(false);
            jCNPJOS.setVisible(false);

        } else if (jTipoPessoaOS.getSelectedItem().equals("Pessoa Jurídica")) {

            txtCPFOS.setVisible(false);
            jCPFOS.setVisible(false);
            txtCNPJOS.setVisible(true);
            jCNPJOS.setVisible(true);
        } else if (jTipoPessoaOS.getSelectedItem().equals("Selecione...")) {

            txtCPFOS.setVisible(false);
            txtCPFOS.setVisible(false);
            txtCNPJOS.setVisible(false);
            jCNPJOS.setVisible(false);
            jCPFOS.setVisible(false);
        }
    }//GEN-LAST:event_jTipoPessoaOSActionPerformed

    private void jButtonCriarOrçamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCriarOrçamentoActionPerformed
        try {

            ColaboradorDao Lista = new ColaboradorDao();
            ArrayList<colaborador> listaColaborador = null;
            listaColaborador = Lista.obterColaborador();

            veiculoDao lista = new veiculoDao();
            ArrayList<veiculo> listaVeiculo = null;
            listaVeiculo = lista.obterVeiculo();
            boolean validacao = false;

            OsDao metodos = new OsDao();
            OS incluir = new OS();
            incluir.setCodigoDaOs(WIDTH);
            incluir.setIdCliente(Integer.parseInt(txtIDcliente.getText()));
            incluir.setIdServico(Integer.parseInt(txtIDservico.getText()));
            incluir.setIdVeiculo(Integer.parseInt(txtIDVeiculo.getText()));
            incluir.setIdPeca(Integer.parseInt(txtIDpeca.getText()));
            for (int i = 0; i < listaColaborador.size(); i++) {
                if (jComboBoxFuncionario.getSelectedItem().equals(listaColaborador.get(i).getNome())) {
                    incluir.setIdfuncioanrioResponsavel(listaColaborador.get(i).getID());
                }

            }
            incluir.setQuantidadePecas(Integer.parseInt(txtQuantidadePecas.getText()));
            if (txtQuantidadePecas.getText().equals("''")) {
                throw new Exception("Quantidade de Peças Invalida!");

            }
            for (int i = 0; i < listaVeiculo.size(); i++) {
                if (String.valueOf(listaVeiculo.get(i).getID()).equals(txtIDVeiculo.getText())) {
                    if (String.valueOf(listaVeiculo.get(i).getIdCliente()).equals(txtIDcliente.getText())) {
                        validacao = true;

                    }

                }

            }
            if (validacao == false) {
                throw new Exception("Veiculo não Pertence a esse Cliente");

            }

            incluir.setStatus(statusOS.ORDEMSERVICO);
            incluir.setValorMaoDeobra(Float.parseFloat(txtValorServico.getText()));
            incluir.setValorUnitarioPecas(Float.parseFloat(txtValorPeca.getText()));
            metodos.incluir(incluir);

            EstoqueDao estoque = new EstoqueDao();
            estoque alterar = new estoque();
            ArrayList<estoque> listaEstoque = null;
            listaEstoque = estoque.obterPecas();

            for (int i = 0; i < listaEstoque.size(); i++) {

                if (String.valueOf(listaEstoque.get(i).getId()).equals(txtIDpeca.getText())) {
                    alterar.setId(listaEstoque.get(i).getId());
                    alterar.setCodigo(listaEstoque.get(i).getCodigo());
                    alterar.setDescricao(listaEstoque.get(i).getDescricao());
                    alterar.setValorUnidade(listaEstoque.get(i).getValorUnidade());
                    int estoqueAtual = listaEstoque.get(i).getQuantidadePecas();
                    int estoqueAtualizado = estoqueAtual - Integer.parseInt(txtQuantidadePecas.getText());
                    if (estoqueAtualizado < 0) {
                        throw new Exception("Quantidade de peças indisponíveis! ");

                    }
                    alterar.setQuantidadePecas(estoqueAtualizado);

                }

            }
            estoque.alterar(alterar, Integer.valueOf(txtIDpeca.getText()));

        } catch (Exception erro) {
            JOptionPane.showMessageDialog(this, erro);
            erro.printStackTrace();
        }
        dispose();

    }//GEN-LAST:event_jButtonCriarOrçamentoActionPerformed

    private void jButtonVoltarOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVoltarOActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonVoltarOActionPerformed

    private void jTableClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableClienteMouseClicked

        try {
            if (jCEscolherLista.getSelectedItem().equals("Cliente")) {

                ClienteDao lista = new ClienteDao();
                ArrayList<cliente> lista_cliente = null;
                lista_cliente = lista.obterClientes();
                String usuario = "" + jTableCliente.getValueAt(jTableCliente.getSelectedRow(), 0);

                for (int i = 0; i < lista_cliente.size(); i++) {

                    if (String.valueOf(lista_cliente.get(i).getID()).equals(usuario)) {

                        txtIDcliente.setText("" + lista_cliente.get(i).getID());
                        txtNomeCliente.setText("" + lista_cliente.get(i).getNome());
                        if (jTipoPessoaOS.getSelectedItem().equals("Pessoa Física")) {
                            txtCPFOS.setText("" + lista_cliente.get(i).getCPF_CNPJ());

                        } else if (jTipoPessoaOS.getSelectedItem().equals("Pessoa Jurídica")) {
                            txtCNPJOS.setText("" + lista_cliente.get(i).getCPF_CNPJ());

                        }

                    }

                }
            } else if (jCEscolherLista.getSelectedItem().equals("Peça")) {
                EstoqueDao lista = new EstoqueDao();
                ArrayList<estoque> listaEstoque = null;
                listaEstoque = lista.obterPecas();
                String usuario = "" + jTableCliente.getValueAt(jTableCliente.getSelectedRow(), 0);
                for (int i = 0; i < listaEstoque.size(); i++) {
                    if (String.valueOf(listaEstoque.get(i).getId()).equals(usuario)) {
                        txtIDpeca.setText("" + listaEstoque.get(i).getId());
                        txtValorPeca.setText("" + listaEstoque.get(i).getValorUnidade());
                        txtDescricaoPeca.setText("" + listaEstoque.get(i).getDescricao());

                    }

                }

            } else if (jCEscolherLista.getSelectedItem().equals("Serviço")) {
                ServicosDao lista = new ServicosDao();
                ArrayList<servicos> listaServico = null;
                listaServico = lista.obterServicos();
                String usuario = "" + jTableCliente.getValueAt(jTableCliente.getSelectedRow(), 0);
                for (int i = 0; i < listaServico.size(); i++) {
                    if (String.valueOf(listaServico.get(i).getCodigoDoServico()).equals(usuario)) {
                        txtDescricaoServico.setText("" + listaServico.get(i).getDescricao());
                        txtIDservico.setText("" + listaServico.get(i).getCodigoDoServico());
                        txtTipoServico.setText("" + listaServico.get(i).getTipo());
                        txtValorServico.setText("" + listaServico.get(i).getValor());

                    }

                }

            } else if (jCEscolherLista.getSelectedItem().equals("Veiculo")) {
                veiculoDao lista = new veiculoDao();
                ArrayList<veiculo> listaVeiculo = null;
                listaVeiculo = lista.obterVeiculo();
                String usuario = "" + jTableCliente.getValueAt(jTableCliente.getSelectedRow(), 0);
                for (int i = 0; i < listaVeiculo.size(); i++) {
                    if (String.valueOf(listaVeiculo.get(i).getID()).equals(usuario)) {
                        txtIDVeiculo.setText("" + listaVeiculo.get(i).getID());
                        txtModelo.setText("" + listaVeiculo.get(i).getModeloVeiculo().getDescricao());
                        txtPLACA.setText("" + listaVeiculo.get(i).getPlaca());

                    }

                }

            }

        } catch (Exception erro) {
            JOptionPane.showMessageDialog(this, erro);
            erro.printStackTrace();
        }


    }//GEN-LAST:event_jTableClienteMouseClicked

    private void jButtonBuscarPecaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarPecaActionPerformed

        try {
            if (jCEscolherLista.getSelectedItem().equals("Peça")) {
                EstoqueDao metodos = new EstoqueDao();
                ArrayList<estoque> listaEstoque = null;
                DefaultTableModel modelPeca = (DefaultTableModel) jTableCliente.getModel();
                listaEstoque = metodos.obterPecas();
                String[] vetString = new String[4];
                modelPeca.setRowCount(0);
                boolean contem = false;
                for (int i = 0; i < listaEstoque.size(); i++) {

                    vetString[0] = listaEstoque.get(i).getId() + "";
                    vetString[1] = listaEstoque.get(i).getDescricao() + "";
                    vetString[2] = listaEstoque.get(i).getValorUnidade() + "";
                    vetString[3] = listaEstoque.get(i).getQuantidadePecas() + "";

                    if (jEscolherTipoBuscaPeca.getSelectedItem().equals("ID")) {
                        if (String.valueOf(listaEstoque.get(i).getId()).contains(txtBuscarPecasO.getText())) {
                            modelPeca.addRow(vetString);
                            contem = true;
                        }

                    } else if (jEscolherTipoBuscaPeca.getSelectedItem().equals("Descrição")) {
                        if (listaEstoque.get(i).getDescricao().toUpperCase().contains(txtBuscarPecasO.getText().toUpperCase())) {
                            modelPeca.addRow(vetString);
                            contem = true;
                        }

                    }

                }
                if (contem == false) {
                    throw new Exception("Peça não encontrada");
                }

            }
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(this, erro);
        }


    }//GEN-LAST:event_jButtonBuscarPecaActionPerformed

    private void jButtonBuscarServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarServicoActionPerformed
        try {
            if (jCEscolherLista.getSelectedItem().equals("Serviço")) {
                ServicosDao metodos = new ServicosDao();
                ArrayList<servicos> listaServico = null;
                DefaultTableModel modelServico = (DefaultTableModel) jTableCliente.getModel();
                listaServico = metodos.obterServicos();
                String[] vetString = new String[4];
                modelServico.setRowCount(0);
                boolean contem = false;
                for (int i = 0; i < listaServico.size(); i++) {

                    vetString[0] = listaServico.get(i).getCodigoDoServico() + "";
                    vetString[1] = listaServico.get(i).getTipo() + "";
                    vetString[2] = listaServico.get(i).getDescricao() + "";
                    vetString[3] = listaServico.get(i).getValor() + "";

                    if (jEscolherTipoBuscaServico.getSelectedItem().equals("ID")) {
                        if (String.valueOf(listaServico.get(i).getCodigoDoServico()).contains(txtBuscarServico.getText())) {
                            modelServico.addRow(vetString);
                            contem = true;
                        }

                    } else if (jEscolherTipoBuscaServico.getSelectedItem().equals("Tipo Serviço")) {
                        if (String.valueOf(listaServico.get(i).getTipo()).toUpperCase().contains(txtBuscarServico.getText().toUpperCase())) {
                            modelServico.addRow(vetString);
                            contem = true;
                        }
                    } else if (jEscolherTipoBuscaServico.getSelectedItem().equals("Descrição")) {
                        if (listaServico.get(i).getDescricao().contains(txtBuscarServico.getText())) {
                            modelServico.addRow(vetString);
                            contem = true;

                        }

                    }

                }
                if (contem = false) {
                    throw new Exception("Serviço não encontrado");
                }
            }

        } catch (Exception erro) {
            JOptionPane.showMessageDialog(this, erro);
            erro.printStackTrace();
        }


    }//GEN-LAST:event_jButtonBuscarServicoActionPerformed

    private void jButtonBuscarVeiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarVeiculoActionPerformed
        try {
            if (jCEscolherLista.getSelectedItem().equals("Veiculo")) {

                veiculoDao metodos = new veiculoDao();
                ArrayList<veiculo> listaVeiculo = null;
                listaVeiculo = metodos.obterVeiculo();
                DefaultTableModel modelVeiculo = (DefaultTableModel) jTableCliente.getModel();
                String[] vetString = new String[4];
                modelVeiculo.setRowCount(0);
                boolean contem = false;
                for (int i = 0; i < listaVeiculo.size(); i++) {
                    vetString[0] = listaVeiculo.get(i).getID() + "";
                    vetString[1] = listaVeiculo.get(i).getIdCliente() + "";
                    vetString[2] = listaVeiculo.get(i).getPlaca() + "";
                    vetString[3] = listaVeiculo.get(i).getModeloVeiculo().getDescricao() + "";

                    if (jEscolherTipoBuscaVeiculo.getSelectedItem().equals("ID Cliente")) {
                        if (String.valueOf(listaVeiculo.get(i).getIdCliente()).contains(txtBuscarVeiculo.getText())) {
                            modelVeiculo.addRow(vetString);
                            contem = true;
                        }

                    } else if (jEscolherTipoBuscaVeiculo.getSelectedItem().equals("Placa")) {
                        if (listaVeiculo.get(i).getPlaca().contains(txtBuscarVeiculo.getText())) {
                            contem = true;
                            modelVeiculo.addRow(vetString);
                        }

                    }
                }

                if (contem == false) {
                    throw new Exception("Veiculo não Cadastrado");
                }
            }
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(this, erro);
        }


    }//GEN-LAST:event_jButtonBuscarVeiculoActionPerformed

    private void jEscolherTipoBuscaVeiculoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEscolherTipoBuscaVeiculoActionPerformed
        if (jEscolherTipoBuscaVeiculo.getSelectedItem().equals("Selecione...")) {
            txtBuscarVeiculo.setVisible(false);
            txtBuscarVeiculo.setEnabled(false);
            txtPlaca.setVisible(false);
            txtPlaca.setEnabled(false);

            jButtonBuscarVeiculo.setVisible(false);
        }
        if (jEscolherTipoBuscaVeiculo.getSelectedItem().equals("ID Cliente")) {
            txtBuscarVeiculo.setVisible(true);
            txtBuscarVeiculo.setEnabled(true);
            txtPlaca.setVisible(false);
            txtPlaca.setEnabled(false);

            jButtonBuscarVeiculo.setVisible(true);
            jButtonBuscarPeca.setVisible(false);
            jButtonBuscarServico.setVisible(false);

        }

        if (jEscolherTipoBuscaVeiculo.getSelectedItem().equals("Placa")) {
            txtBuscarVeiculo.setVisible(false);
            txtBuscarVeiculo.setEnabled(false);
            txtPlaca.setVisible(true);
            txtPlaca.setEnabled(true);

            jButtonBuscarVeiculo.setVisible(true);
        }
    }//GEN-LAST:event_jEscolherTipoBuscaVeiculoActionPerformed

    private void jComboBoxFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxFuncionarioActionPerformed


    }//GEN-LAST:event_jComboBoxFuncionarioActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {

            OS calcular = new OS();

            calcular.setQuantidadePecas(Integer.parseInt(txtQuantidadePecas.getText()));
            calcular.setValorMaoDeobra(Float.parseFloat(txtValorServico.getText()));
            calcular.setValorUnitarioPecas(Float.parseFloat(txtValorPeca.getText()));

            txtvalorTotal.setText(calcular.valorTotal(FRAMEBITS, TOP_ALIGNMENT, TOP_ALIGNMENT) + "");
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(this, erro);
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel jBuscarPor;
    public javax.swing.JButton jButton1;
    public javax.swing.JToggleButton jButtonBuscarO;
    public javax.swing.JToggleButton jButtonBuscarPeca;
    public javax.swing.JToggleButton jButtonBuscarServico;
    public javax.swing.JToggleButton jButtonBuscarVeiculo;
    public javax.swing.JButton jButtonCriarOrçamento;
    public javax.swing.JButton jButtonVoltarO;
    public javax.swing.JComboBox<String> jCEscolherLista;
    public javax.swing.JLabel jCNPJOS;
    public javax.swing.JLabel jCPFOS;
    public javax.swing.JComboBox<String> jComboBoxFuncionario;
    public javax.swing.JComboBox<String> jEscolherTipoBuscaCliente;
    public javax.swing.JComboBox<String> jEscolherTipoBuscaPeca;
    public javax.swing.JComboBox<String> jEscolherTipoBuscaServico;
    public javax.swing.JComboBox<String> jEscolherTipoBuscaVeiculo;
    public javax.swing.JLabel jLabel1;
    public javax.swing.JLabel jLabel10;
    public javax.swing.JLabel jLabel11;
    public javax.swing.JLabel jLabel12;
    public javax.swing.JLabel jLabel13;
    public javax.swing.JLabel jLabel14;
    public javax.swing.JLabel jLabel15;
    public javax.swing.JLabel jLabel16;
    public javax.swing.JLabel jLabel17;
    public javax.swing.JLabel jLabel18;
    public javax.swing.JLabel jLabel19;
    public javax.swing.JLabel jLabel2;
    public javax.swing.JLabel jLabel20;
    public javax.swing.JLabel jLabel21;
    public javax.swing.JLabel jLabel3;
    public javax.swing.JLabel jLabel5;
    public javax.swing.JLabel jLabel6;
    public javax.swing.JLabel jLabel7;
    public javax.swing.JLabel jLabel8;
    public javax.swing.JLabel jLabel9;
    public javax.swing.JDesktopPane jOrçamento;
    public javax.swing.JPanel jPanel1;
    public javax.swing.JPanel jPanel2;
    public javax.swing.JPanel jPanel3;
    public javax.swing.JPanel jPanel4;
    public javax.swing.JPanel jPanel5;
    public javax.swing.JPanel jPanel6;
    public javax.swing.JPanel jPanel7;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JScrollPane jScrollPane2;
    public javax.swing.JScrollPane jScrollPane3;
    public javax.swing.JTable jTableCliente;
    public javax.swing.JComboBox<String> jTipoPessoaOS;
    public javax.swing.JTextField txtBuscarClienteO;
    public javax.swing.JTextField txtBuscarPecasO;
    public javax.swing.JTextField txtBuscarServico;
    public javax.swing.JTextField txtBuscarVeiculo;
    public javax.swing.JFormattedTextField txtCNPJO;
    public javax.swing.JFormattedTextField txtCNPJOS;
    public javax.swing.JFormattedTextField txtCPFO;
    public javax.swing.JFormattedTextField txtCPFOS;
    public javax.swing.JTextField txtDescricaoPeca;
    public javax.swing.JTextField txtDescricaoServico;
    public javax.swing.JTextField txtIDVeiculo;
    public javax.swing.JTextField txtIDcliente;
    public javax.swing.JTextField txtIDpeca;
    public javax.swing.JTextField txtIDservico;
    public javax.swing.JTextField txtModelo;
    public javax.swing.JTextField txtNomeCliente;
    public javax.swing.JTextField txtOS;
    public javax.swing.JTextField txtPLACA;
    public javax.swing.JFormattedTextField txtPlaca;
    public javax.swing.JTextArea txtProblemaRelatado;
    public javax.swing.JTextField txtQuantidadePecas;
    public javax.swing.JTextField txtTipoServico;
    public javax.swing.JTextField txtValorPeca;
    public javax.swing.JTextField txtValorServico;
    public javax.swing.JTextArea txtvalorTotal;
    // End of variables declaration//GEN-END:variables
}
